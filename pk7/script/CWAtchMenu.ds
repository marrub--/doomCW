/********************************************************************************
*																				*
*	Copyright(C) 2014 Graham Sanderson											*
*																				*
*	This program is free software; you can redistribute it and/or modify		*
*	it under the terms of the GNU General Public License as published by		*
*	the Free Software Foundation; either version 3 of the License, or			*
*	(at your option) any later version.											*
*																				*
*	This program is distributed in the hope that it will be useful,				*
*	but WITHOUT ANY WARRANTY; without even the implied warranty of				*
*	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the				*
*	GNU General Public License for more details.								*
*																				*
*	You should have received a copy of the GNU General Public License			*
*	along with this program; if not, see <http://www.gnu.org/licenses/>.		*
*																				*
********************************************************************************/

#include "CWThings.dh"

__function void SprPrint(str sprite, int id, int x, int y)
{
	SetFont(sprite);
	__printf<__printf_hud>("A\n", HUDMSG_PLAIN, id, CR_UNTRANSLATED, x, y, 1.0);
};

script CW_MENUOPEN(int arg1)
{
	int CMenuX, CMenuY, i;
	/* id index
	 * 30 - selected box
	 * 31 - attachment 1
	 * 32 - attachment 2
	 * 33 - attachment 3
	 * 44 - active attachment 1
	 * 45 - active attachment 2
	 * 46 - active attachment 3
	 * 68 - how to use text
	 * 71 - c-menu
	 * 72 - attachment tipbox
	 */
	
	start:
	SetHudSize(320,200,0);
	SetFont("DBIGFONT");
	__printf<__printf_hud>("Reload:Attach\nFire:Switch\n",0,67,0,160.0,15.0,1.0);
	
	switch(arg1)
	{
	case 1: // PISTOL
		CMenuX = 185.0;
		CMenuY = 106.0;
		if(LTrig.inInventory)
			SprPrint("CMENUTRG", 31, CMenuX, CMenuY);
		if(Laz.inInventory)
			SprPrint("CMENULAZ", 32, CMenuX, CMenuY);
		if(FMode.inInventory)
			SprPrint("CMENUFMD", 33, CMenuX, CMenuY);
		
		if(LTrig.onPistol)
			SprPrint("CMENU3", 44, CMenuX-1.0, CMenuY-30.0);
		if(Laz.onPistol)
			SprPrint("CMENU3", 45, CMenuX-1.0, CMenuY-23.0);
		if(FMode.onPistol)
			SprPrint("CMENU3", 46, CMenuX-1.0, CMenuY-16.0);
			
		
		switch(CheckInventory("CMenuNext")) {
		case 0: if(LTrig.inInventory)	SprPrint("CMTRGTIP", 72, 306.0, 167.0); break;
		case 1: if(Laz.inInventory)	SprPrint("CMLAZTIP", 72, 306.0, 167.0); break;
		case 2: if(FMode.inInventory)	SprPrint("CMFMDTIP", 72, 306.0, 167.0); break;};
	break;
	
	case 2: // SHOTGUN
		CMenuX = 128.0;
		CMenuY = 102.0;
		
		if(LTrig.inInventory)
			SprPrint("CMENUTRG", 31, CMenuX, CMenuY);
		if(Laz.inInventory)
			SprPrint("CMENULAZ", 32, CMenuX, CMenuY);
		if(PumpMech.inInventory)
			SprPrint("CMENUPMP", 33, CMenuX, CMenuY);
		
		if(LTrig.onShotgun)
			SprPrint("CMENU3", 44, CMenuX-1.0, CMenuY-30.0);
		if(Laz.onShotgun)
			SprPrint("CMENU3", 45, CMenuX-1.0, CMenuY-23.0);
		if(PumpMech.onShotgun)
			SprPrint("CMENU3", 46, CMenuX-1.0, CMenuY-16.0);
		
		switch(CheckInventory("CMenuNext")) {
		case 0: if(LTrig.inInventory)		SprPrint("CMTRGTIP", 72, 306.0, 167.0); break;
		case 1: if(Laz.inInventory)		SprPrint("CMLAZTIP", 72, 306.0, 167.0); break;
		case 2: if(PumpMech.inInventory)	SprPrint("CMPMPTIP", 72, 306.0, 167.0); break;};
	break;
	
	case 3: // SUPER SHOTGUN
		CMenuX = 128.0;
		CMenuY = 102.0;
		
		if(LTrig.inInventory)
			SprPrint("CMENUTRG", 31, CMenuX, CMenuY);
		if(Laz.inInventory)
			SprPrint("CMENULAZ", 32, CMenuX, CMenuY);
		if(FMode.inInventory)
			SprPrint("CMENUFMD", 33, CMenuX, CMenuY);
		
		if(LTrig.onSSG)
			SprPrint("CMENU3", 44, CMenuX-1.0, CMenuY-30.0);
		if(Laz.onSSG)
			SprPrint("CMENU3", 45, CMenuX-1.0, CMenuY-23.0);
		if(FMode.onSSG)
			SprPrint("CMENU3", 46, CMenuX-1.0, CMenuY-16.0);
		
		switch(CheckInventory("CMenuNext")) {
		case 0: if(LTrig.inInventory)	SprPrint("CMTRGTIP", 72, 306.0, 167.0); break;
		case 1: if(Laz.inInventory)	SprPrint("CMLAZTIP", 72, 306.0, 167.0); break;
		case 2: if(FMode.inInventory)	SprPrint("CMFMDTIP", 72, 306.0, 167.0); break;};
	break;
	};
	
	SprPrint("CMENU2", 30, CMenuX-1.0, CMenuY-(30.0-(7.0*CheckInventory("CMenuNext"))));
	SprPrint("CMENU1", 71, CMenuX, CMenuY);
	
	Delay(1);
	
	for(i = 30; i < 73; i++)
		ClearMsg(i);
	
	goto start;
	return;
};

script CW_MENUCLOSE (void)
{
	ACS_NamedTerminate("CW_MENUOPEN",0);
	for(int i = 30; i < 73; i++)
		ClearMsg(i);
};

