__library("CWDefs");

// Pistol related
#define PIST_SIL	1
#define PIST_LAZ	2
#define PIST_TRG	3
#define CM_PISTL	4

// Shotgun related
#define SHOG_SIL	5
#define SHOG_LAZ	6
#define SHOG_TRG	7
#define SHOG_PMP	8
#define CM_SHTGN	9

// GetVal arguments
#define GV_PSTF1	1
#define GV_PSTF2	2
#define GV_SHTF1	3
#define GV_SHTP1	4

#define ClearMsg(arg1)	__printf<__printf_hud>("\n",0,(arg1),0,0,0,0)
#define script			__extscript "ACS"

__function void SWepFunc(str arg1, str arg2, str arg3)
{
	if(CheckInventory(arg1))
	{
		GiveInventory(arg2,1);
		SetWeapon(arg2);
	}
	else
	{
		GiveInventory(arg3,1);
		SetWeapon(arg3);
	};
};

__function void SItmFunc(str arg1, str arg2)
{
	if(CheckInventory(arg1))
	{
		TakeInventory(arg2,1);
		TakeInventory(arg1,1);
	}
	else
	{
		GiveInventory(arg2,1);
		GiveInventory(arg1,1);
	};
};

__function void SItmFunc2(str arg1)
{
	if(CheckInventory(arg1))
	{
		TakeInventory(arg1,1);
	}
	else
	{
		GiveInventory(arg1,1);
	};
};

__function void CWepFunc(str arg1, str arg2)
{
	if(CheckWeapon(arg1))
	{
		GiveInventory(arg2,1);
		SetWeapon(arg2);
	};
};

__function void SprPrint(str sprite, int id, int x, int y)
{
	SetFont(sprite);
	__printf<__printf_hud>("A\n", HUDMSG_PLAIN, id, CR_UNTRANSLATED, x, y, 1.0);
};

__function void SprPrintFade(str sprite, int id, int x, int y, int d, int h)
{
	SetFont(sprite);
	__printf<__printf_hud>("A\n", HUDMSG_FADEOUT, id, CR_UNTRANSLATED, x, y, d, h);
};

__function int GetVelocity(void)
{
	fixed vel;
	fixed x = GetActorVelX(0);
	fixed y = GetActorVelY(0);
	fixed angle = VectorAngle(x, y);
	
	if(((angle + 0.125) % 0.5) > 0.25)
	{
		vel = y * Sin(angle);
	}
	else
	{
		vel = x * Cos(angle);
	};
	int retvel = vel;
	retvel = retvel >> 16;
	return retvel;
};

